{"version":3,"file":"static/js/701.92434900.chunk.js","mappings":"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","sources":["components/toggleContent.tsx","components/contentpage.tsx"],"sourcesContent":["import { Component } from \"react\";\nimport { useEffect, useState } from 'react';\n\n\ninterface Input {\n  title: string,\n  content: Component\n}\n\nexport default function ToggleContent(props: Input) {\n\n  const [hide, setHide] = useState(true);\n  const [content, setContent] = useState((<></>));\n\n  console.log(\"------------------------------------\")\n  console.log(props.className);\n  console.log(\"------------------------------------\")\n  useEffect(() => {\n    setContent(props.content);\n  });\n\n\n  function handleClick() {\n    console.log(\"clicked\")\n    setHide(!hide);\n  }\n\n  console.log(\"reached here\")\n\n  return (<section className={props.contentStyle}>\n    <section onClick={handleClick} className={props.toggleStyle}> \n      {hide ? (<>&#9657;</>) : <>&#9663;</>} \n      {props.title} \n    </section>\n    {\n      hide ? (<div></div>) : (content)\n    }\n  </section>);\n\n}\n","\nimport './contentpage.css';\nimport { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ToggleContent from './toggleContent';\nimport rehypeRaw from \"rehype-raw\";\n\ninterface Input {\n  contentPath: string,\n  contents: Object<string, Array<Object> | string>,\n}\n\nexport default function Content(props: Input) {\n\n  const [contents, setContents] = useState({key: \"\", value: \"\"});\n  const [postIndex, setPostIndex] = useState([0]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // using hooks to prevent infinite re-rendering\n    const contentList = props.contents.contentList;\n    console.log(\"marker\")\n    console.log(contentList);\n    setContents(contentList);\n\n    setLoading(false);\n\n  });\n\n  if (loading)\n    return <div>Loading at this moment</div> \n\n  // now generate the links for the table of contentList\n  // make it recursive to emulate filesystem-like structure\n  \n  \n  function buildToC(dir, indices: Array<number>=[]) {\n    // dir is an array of further dir (in deeper levels) or strings that signify actual posts\n    console.log(\"start\")\n    console.log(dir)\n    \n    const values = dir.value;\n    console.log(values);\n    const links = [];\n    for (let i = 0; i < values.length; i++) {\n      const content = values[i];\n      console.log('test')\n      console.log(content);\n      if (\"key\" in values[i]) {\n        links.push(<ToggleContent title={values[i].key} content={buildToC(values[i], [...indices, i])} contentStyle=\"tableOfContent\" toggleStyle=\"toggleSettings\" />);\n      } else {\n        links.push(<a onClick={() => setPostIndex([...indices, i])} className=\"contentLink\" key={content.title}>{\"[\" + content.title + \"]\"}</a>)\n      }\n    }\n    return links;\n  }\n\n  function getPost(contents, indices: Array<number>) {\n    let content = contents;\n    for (const i of indices) {\n      content = content.value;\n      content = content[i];\n    }\n    return content;\n   \n\n  }\n\n  return (\n    <div className=\"contentPageDiv\">\n      <section className=\"tableOfContent\">\n        {buildToC(contents)}\n      </section>\n\n      <hr className=\"contentVerticalLine\"/>\n      <ReactMarkdown className=\"articleContent\" children={getPost(contents, postIndex).mdContent} rehypePlugins={[rehypeRaw]} />\n    </div>\n  );\n}\n\n\n"],"names":["ToggleContent","props","_useState","useState","_useState2","_slicedToArray","hide","setHide","_useState3","_jsx","_Fragment","_useState4","content","setContent","console","log","className","useEffect","_jsxs","contentStyle","children","onClick","toggleStyle","title","Content","key","value","contents","setContents","postIndex","setPostIndex","_useState5","_useState6","loading","setLoading","contentList","buildToC","dir","indices","arguments","length","undefined","values","links","_loop","i","push","concat","_toConsumableArray","ReactMarkdown","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","getPost","mdContent","rehypePlugins","rehypeRaw"],"sourceRoot":""}